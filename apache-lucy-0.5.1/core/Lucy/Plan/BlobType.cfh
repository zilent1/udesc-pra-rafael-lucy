/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

parcel Lucy;

/** Default behaviors for binary fields.
 *
 * BlobType is an implementation of FieldType tuned for use with fields
 * containing binary data, which cannot be indexed or searched -- only stored.
 */
public class Lucy::Plan::BlobType inherits Lucy::Plan::FieldType {

    /** Create a new BlobType.
     *
     * @param stored boolean indicating whether the field should be stored.
     */
    public inert incremented BlobType*
    new(bool stored);

    /** Initialize a BlobType.
     *
     * @param stored boolean indicating whether the field should be stored.
     */
    public inert BlobType*
    init(BlobType *self, bool stored);

    /** Returns true.
     */
    public bool
    Binary(BlobType *self);

    /** Throws an error unless `sortable` is false.
     */
    public void
    Set_Sortable(BlobType *self, bool sortable);

    int8_t
    Primitive_ID(BlobType *self);

    incremented Hash*
    Dump_For_Schema(BlobType *self);

    incremented Hash*
    Dump(BlobType *self);

    incremented BlobType*
    Load(BlobType *self, Obj *dump);

    public bool
    Equals(BlobType *self, Obj *other);
}


