/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

parcel Lucy;

/** Specify a custom sort order for search results.
 *
 * By default, searches return results in order of relevance; SortSpec allows
 * you to indicate an alternate order via an array of
 * [SortRules](cfish:SortRule).
 *
 * Fields you wish to sort against must be `sortable`.
 *
 * For a stable sort (important when paging through results), add a
 * sort-by-doc rule as the last SortRule.
 */

public class Lucy::Search::SortSpec inherits Clownfish::Obj {

    Vector        *rules;

    /** Create a new SortSpec.
     *
     * @param rules An array of SortRules.
     */
    public inert SortSpec*
    new(Vector *rules);

    /** Initialize a SortSpec.
     *
     * @param rules An array of SortRules.
     */
    public inert SortSpec*
    init(SortSpec *self, Vector *rules);

    void
    Serialize(SortSpec *self, OutStream *outstream);

    incremented SortSpec*
    Deserialize(decremented SortSpec *self, InStream *instream);

    Vector*
    Get_Rules(SortSpec *self);

    public void
    Destroy(SortSpec *self);
}


