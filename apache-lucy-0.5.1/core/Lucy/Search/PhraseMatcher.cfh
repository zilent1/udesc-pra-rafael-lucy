/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

parcel Lucy;

/** Matcher for a PhraseQuery.
 */

class Lucy::Search::PhraseMatcher inherits Lucy::Search::Matcher {

    int32_t         doc_id;
    uint32_t        num_elements;
    Similarity     *sim;
    PostingList   **plists;
    ByteBuf        *anchor_set;
    float           phrase_freq;
    float           phrase_boost;
    Compiler       *compiler;
    float           weight;
    bool            first_time;
    bool            more;

    inert incremented PhraseMatcher*
    new(Similarity *similarity, Vector *posting_lists, Compiler *compiler);

    inert PhraseMatcher*
    init(PhraseMatcher *self, Similarity *similarity, Vector *posting_lists,
         Compiler *compiler);

    public void
    Destroy(PhraseMatcher *self);

    public int32_t
    Next(PhraseMatcher *self);

    public int32_t
    Advance(PhraseMatcher *self, int32_t target);

    public int32_t
    Get_Doc_ID(PhraseMatcher *self);

    public float
    Score(PhraseMatcher *self);

    /** Calculate how often the phrase occurs in the current document.
     */
    float
    Calc_Phrase_Freq(PhraseMatcher *self);
}


