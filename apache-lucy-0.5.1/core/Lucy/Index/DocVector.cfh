/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

parcel Lucy;

/** A collection of TermVectors.
 */

class Lucy::Index::DocVector nickname DocVec
    inherits Clownfish::Obj {

    Hash    *field_bufs;
    Hash    *field_vectors;

    /** Constructor.
     */
    inert incremented DocVector*
    new();

    inert DocVector*
    init(DocVector *self);

    incremented TermVector*
    Term_Vector(DocVector *self, String *field, String *term);

    /** Add a compressed, encoded TermVector to the object.
     */
    void
    Add_Field_Buf(DocVector *self, String *field, Blob *field_buf);

    /** Return the compressed, encoded TermVector associated with a particular
     * field.
     */
    Blob*
    Field_Buf(DocVector *self, String *field);

    void
    Serialize(DocVector *self, OutStream *outstream);

    incremented DocVector*
    Deserialize(decremented DocVector *self, InStream *instream);

    public void
    Destroy(DocVector *self);
}


