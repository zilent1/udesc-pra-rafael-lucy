/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

parcel Lucy;

/** Term freq and positional data.
 */

class Lucy::Index::TermVector nickname TV
    inherits Clownfish::Obj {

    String *field;
    String *text;
    uint32_t num_pos;
    I32Array  *positions;
    I32Array  *start_offsets;
    I32Array  *end_offsets;

    /** Constructor.  The object will assume ownership of the positions,
     * start_offsets, and end_offsets arrays.
     */
    inert incremented TermVector*
    new(String *field, String *text, I32Array *positions,
        I32Array *start_offsets, I32Array *end_offsets);

    inert TermVector*
    init(TermVector *self, String *field, String *text,
         I32Array *positions, I32Array *start_offsets, I32Array *end_offsets);

    I32Array*
    Get_Positions(TermVector *self);

    I32Array*
    Get_Start_Offsets(TermVector *self);

    I32Array*
    Get_End_Offsets(TermVector *self);

    void
    Serialize(TermVector *self, OutStream *outstream);

    incremented TermVector*
    Deserialize(decremented TermVector *self, InStream *instream);

    public bool
    Equals(TermVector *self, Obj *other);

    public void
    Destroy(TermVector *self);
}


