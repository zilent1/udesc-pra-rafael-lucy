/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

parcel Lucy;

public class Lucy::Object::I32Array nickname I32Arr inherits Clownfish::Obj {
    int32_t  *ints;
    uint32_t  size;

    public inert incremented I32Array*
    new(int32_t *ints, uint32_t size);

    inert incremented I32Array*
    new_steal(int32_t *ints, uint32_t size);

    public inert incremented I32Array*
    new_blank(uint32_t size);

    public inert I32Array*
    init(I32Array *self, int32_t *ints, uint32_t size);

    /** Set the value at `tick`, or throw an error if
     * `tick` is out of bounds.
     */
    public void
    Set(I32Array *self, uint32_t tick, int32_t value);

    /** Return the value at `tick`, or throw an error if
     * `tick` is out of bounds.
     */
    public int32_t
    Get(I32Array *self, uint32_t tick);

    /** Accessor for 'size' member.
     */
    public uint32_t
    Get_Size(I32Array *self);

    public void
    Destroy(I32Array *self);
}


